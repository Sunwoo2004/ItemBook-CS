<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>